// Top-level build file where you can add configuration options common to all sub-projects/modules.

ext {
    githubProjectName = 'osgi-bootstrap'
    versions = [
            junit                  : '4.11',
            paxlogging             : '1.7.1',
            felixscr               : '1.9.6',
            felixscrant            : '1.5.0',
            jersey                 : '1.17',
            gson                   : '2.2.2',
            guava                  : '15.0',
            restassured            : '1.8.1'
    ]

    libraries = [
        jersey : ["com.sun.jersey:jersey-servlet:$versions.jersey",
                "com.sun.jersey:jersey-core:$versions.jersey",
                "com.sun.jersey:jersey-server:$versions.jersey",
                "com.sun.jersey:jersey-json:$versions.jersey",
                "com.sun.jersey:jersey-grizzly2:$versions.jersey",
                "com.sun.jersey:jersey-grizzly2:$versions.jersey"],

        restassured : ["com.jayway.restassured:rest-assured:$versions.restassured",
                "com.jayway.restassured:json-path:$versions.restassured",
                'org.codehaus.groovy:groovy-all:2.1.3']
    ]
}

buildscript {
    apply from: file('gradle/buildscript.gradle'), to: buildscript
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/check.gradle')


project('jaxrs-connector') {

    dependencies {
        compile 'org.osgi:org.osgi.core:4.3.0',
                "org.apache.felix:org.apache.felix.scr.annotations:$versions.felixscr",
                "com.sun.jersey:jersey-bundle:$versions.jersey",
                "com.google.code.gson:gson:$versions.gson",
                "org.ops4j.pax.logging:pax-logging-api:$versions.paxlogging",
                "com.google.guava:guava:$versions.guava",
                'org.osgi:org.osgi.compendium:4.3.1'

    }

    jar.dependsOn(genscr)

    jar {
        manifest {
            //from project.baseManifest

            version = '0.0.1'
            name = 'org.lenition.osgi.jaxrs-connector'

            instruction 'Import-Package',
                    'org.slf4j;version="[1.6.1,2.0)";provider=paxlogging',
                    '*'
            instruction 'Export-Package', '*'
            instruction 'Private-Package', '*'
            instruction 'Service-Component', 'OSGI-INF/serviceComponents.xml'
            //instruction 'Build-Version', '0.0'
            //instruction 'Build-Repo-BranchName', 'origin'
            //instruction 'Build-Repo-CurrentCommitHash', '0001'
        }
    }
}



project('whiteboard') {
    dependencies {
        compile 'org.osgi:org.osgi.core:4.3.0',
                "org.apache.felix:org.apache.felix.scr.annotations:$versions.felixscr",
                "com.sun.jersey:jersey-bundle:$versions.jersey",
                "com.google.code.gson:gson:$versions.gson",
                "org.ops4j.pax.logging:pax-logging-api:$versions.paxlogging",
                "com.google.guava:guava:$versions.guava",
                'org.osgi:org.osgi.compendium:4.3.1',
                "javax.servlet:servlet-api:2.5"
    }

    jar.dependsOn(genscr)

    jar {
        manifest {
            //from project.baseManifest

            version = '0.0.1'
            name = 'org.lenition.osgi.whiteboard'

            instruction 'Import-Package',
                    'org.slf4j;version="[1.6.1,2.0)";provider=paxlogging',
                    '*'
            instruction 'Export-Package', '*'
            instruction 'Private-Package', '*'
            instruction 'Service-Component', 'OSGI-INF/serviceComponents.xml'
            instruction 'Bundle-Activator', 'org.lenition.osgi.Activator'

            //instruction 'Build-Version', '0.0'
            //instruction 'Build-Repo-BranchName', 'origin'
            //instruction 'Build-Repo-CurrentCommitHash', '0001'
        }
    }

}




task createWrappseter(type: Wrapper) {
    gradleVersion = '1.8'
}
