
configurations {
    dscompile {
        extendsFrom compile
    }
}

dependencies {
    dscompile 'org.apache.felix:org.apache.felix.scr.ant:1.4.0',
              "org.apache.felix:org.apache.felix.scr.annotations:$versions.felixscr",
              'org.osgi:org.osgi.compendium:4.3.1'

	compile 'org.osgi:org.osgi.core:4.3.0',
            "org.apache.felix:org.apache.felix.scr.annotations:$versions.felixscr",
			"com.sun.jersey:jersey-bundle:$versions.jersey",
            "com.google.code.gson:gson:$versions.gson",
            "org.ops4j.pax.logging:pax-logging-api:$versions.paxlogging",
            "com.google.guava:guava:$versions.guava"


    testCompile "junit:junit:$versions.junit"
				
}

/*
 * Generates OSGi Declarative Services component definition xml files
 * by analyzing source files.
 */
task genscr(dependsOn: compileJava) << {
    ant.taskdef(resource: 'scrtask.properties',
                classpath: configurations.dscompile.asPath )
    ant.scr(srcdir: 'src/main/java', destdir: 'build/classes/main',
            classpath: configurations.dscompile.asPath)
}

jar.dependsOn(genscr)

jar {
	manifest { 
		//from project.baseManifest
        
		version = '0.0.1'
		name = 'org.lenition.osgi.jaxrs-connector'

        instruction 'Import-Package',
                            'org.slf4j;version="[1.6.1,2.0)";provider=paxlogging',
                            '*'
		instruction 'Export-Package', '*'
		instruction 'Private-Package', '*'
		instruction 'Service-Component', 'OSGI-INF/serviceComponents.xml'
        //instruction 'Build-Version', '0.0'
        //instruction 'Build-Repo-BranchName', 'origin'
        //instruction 'Build-Repo-CurrentCommitHash', '0001'
	}
}
